---
import { menuLinks } from "@/site-config";
import Intro from "../Intro.astro";
import Search from "../Search.astro";
import ThemeToggle from "../ThemeToggle.astro";
import NahiyanKhanLogo from "@/assets/nahiyan_khan.svg?raw";

const url = new URL(Astro.request.url);
---

<header
	id="main-header"
	class="border-borderDivider fixed w-full overflow-hidden border-b bg-bgColor"
	x-data="{ start: false, end: false, scroll: 64 }"
	@scroll.window="start = (window.pageYOffset > 64 ? true : false); scroll = 64 - (window.pageYOffset - 64) * 0.357; end = (scroll < 0 ? true : false)"
>
	<div
		class="border-borderDivider group container grid flex-row gap-y-16 border-l border-r sm:grid-cols-[3fr_2fr]"
	>
		<div class="flex justify-center sm:flex-col">
			<div
				class="w-4/12 transform text-textProminent"
				:class="{ 'translate-y-[-64px]': !end, 'translate-y-0': end }"
				:style="(start && !end) && { transform: `translateY(${scroll}px)` }"
			>
				<Fragment set:html={NahiyanKhanLogo} />
			</div>
			<!-- <Intro home={url.pathname === "/"} /> -->
			<!-- <nav
				aria-label="Main menu"
				class="absolute -inset-x-4 top-14 hidden flex-col items-end gap-y-4 rounded-md bg-bgColor/[.85] py-4 text-accent shadow backdrop-blur group-[.menu-open]:z-50 group-[.menu-open]:flex sm:static sm:z-auto sm:-ms-4 sm:mt-1 sm:flex sm:flex-row sm:items-center sm:divide-x sm:divide-dashed sm:divide-accent sm:rounded-none sm:bg-transparent sm:py-0 sm:shadow-none sm:backdrop-blur-none"
				id="navigation-menu"
			>
				{
					menuLinks.map((link) => (
						<a
							aria-current={url.pathname === link.path ? "page" : false}
							class="px-4 py-4 underline-offset-2 sm:py-0 sm:hover:underline"
							data-astro-prefetch
							href={link.path}
						>
							{link.title}
						</a>
					))
				}
			</nav> -->
		</div>

		<div class="border-borderDivider flex items-center border-l py-8 sm:flex-row">
			<!-- <Search /> -->
			<ThemeToggle />
			<mobile-button>
				<button
					aria-expanded="false"
					aria-haspopup="menu"
					aria-label="Open main menu"
					class="group relative ms-4 h-7 w-7 sm:invisible sm:hidden"
					id="toggle-navigation-menu"
					type="button"
				>
					<svg
						aria-hidden="true"
						class="absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 transition-all group-aria-expanded:scale-0 group-aria-expanded:opacity-0"
						fill="none"
						focusable="false"
						id="line-svg"
						stroke="currentColor"
						stroke-width="1.5"
						viewBox="0 0 24 24"
						xmlns="http://www.w3.org/2000/svg"
					>
						<path d="M3.75 9h16.5m-16.5 6.75h16.5" stroke-linecap="round" stroke-linejoin="round"
						></path>
					</svg>
					<svg
						aria-hidden="true"
						class="absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 scale-0 text-accent opacity-0 transition-all group-aria-expanded:scale-100 group-aria-expanded:opacity-100"
						class="text-accent"
						fill="none"
						focusable="false"
						id="cross-svg"
						stroke="currentColor"
						stroke-width="1.5"
						viewBox="0 0 24 24"
						xmlns="http://www.w3.org/2000/svg"
					>
						<path d="M6 18L18 6M6 6l12 12" stroke-linecap="round" stroke-linejoin="round"></path>
					</svg>
				</button>
			</mobile-button>
		</div>
	</div>
</header>

<script>
	import { toggleClass } from "@/utils/domElement";

	class MobileNavBtn extends HTMLElement {
		#menuOpen: boolean = false;

		connectedCallback() {
			const headerEl = document.getElementById("main-header")!;
			const mobileButtonEl = this.querySelector<HTMLButtonElement>("button");

			mobileButtonEl?.addEventListener("click", () => {
				if (headerEl) toggleClass(headerEl, "menu-open");
				this.#menuOpen = !this.#menuOpen;
				mobileButtonEl.setAttribute("aria-expanded", this.#menuOpen.toString());
			});
		}
	}

	customElements.define("mobile-button", MobileNavBtn);
</script>
