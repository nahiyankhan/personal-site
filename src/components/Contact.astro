---
import ContactTitle from "@/assets/contact.svg?raw";
import { socialLinks } from "@/site-config";
import { Icon } from "astro-icon/components";
import Subtitle from "./Subtitle.astro";
---

<div>
	<div class="relative flex flex-col items-end px-8 pb-8 pt-16">
		<div id="contact-logo" class="[&>svg]:w-full" data-logo-scale>
			<Fragment set:html={ContactTitle} />
		</div>
		<div class="relative inline-flex w-[fit-content]">
			<div class="baseline-on-grid text-sm">
				a.k.a say hi. recommend a science fiction novel. let's jam.
			</div>
		</div>
	</div>

	<div class="px-8">
		<Subtitle title="say-hi" />

		<ul>
			{
				socialLinks.map(({ friendlyName, link, name }) => (
					<li class="flex">
						<a class="link relative flex underline" href={link} target="_blank">
							<div class="full justify-left">
								<Icon aria-hidden="true" class="h-8 w-8" focusable="false" name={name} />
							</div>
							<p class="baseline-on-grid pl-4 text-sm">{friendlyName}</p>
						</a>
					</li>
				))
			}
		</ul>
	</div>
</div>

<script>
	// Logo scaling system for Contact - increments in 32px units, max 3 units (96px)
	const LOGO_ASPECT_RATIO = 2692 / 331; // ~8.13:1
	const GRID_UNIT = 32;
	const HORIZONTAL_PADDING = 64; // px-8 on both sides
	const MIN_UNITS = 2; // 64px minimum
	const MAX_UNITS = 3; // 96px maximum

	function calculateLogoSize(): number {
		const viewportWidth = window.innerWidth;
		let units = MIN_UNITS;

		while (units < MAX_UNITS) {
			const nextUnits = units + 1;
			const nextHeight = nextUnits * GRID_UNIT;
			const nextWidth = nextHeight * LOGO_ASPECT_RATIO;
			const nextTotalWidth = nextWidth + HORIZONTAL_PADDING;

			if (nextTotalWidth > viewportWidth) {
				break;
			}

			units = nextUnits;
		}

		return units * GRID_UNIT;
	}

	function updateLogoSize() {
		const logoElement = document.getElementById("contact-logo");
		if (!logoElement) return;

		const svg = logoElement.querySelector("svg");
		if (!svg) return;

		const height = calculateLogoSize();
		const units = height / GRID_UNIT;
		const width = height * LOGO_ASPECT_RATIO;
		const totalWidth = width + HORIZONTAL_PADDING;

		svg.style.height = `${height}px`;

		console.log("ðŸŽ¨ Contact Logo Scaling:", {
			viewportWidth: window.innerWidth,
			logoHeight: `${height}px (${units} Ã— 32px)`,
			logoWidth: `${Math.round(width)}px`,
			totalWidth: `${Math.round(totalWidth)}px`,
			maxAllowed: `${MAX_UNITS * GRID_UNIT}px`,
		});
	}

	function debounce(func: Function, wait: number) {
		let timeout: ReturnType<typeof setTimeout> | null = null;
		return function executedFunction(...args: any[]) {
			const later = () => {
				timeout = null;
				func(...args);
			};
			if (timeout) clearTimeout(timeout);
			timeout = setTimeout(later, wait);
		};
	}

	const handleResize = debounce(updateLogoSize, 150);

	document.addEventListener("DOMContentLoaded", updateLogoSize);
	document.addEventListener("theme-change", () => {
		setTimeout(updateLogoSize, 50);
	});
	window.addEventListener("resize", handleResize);
	document.addEventListener("astro:after-swap", updateLogoSize);
</script>
